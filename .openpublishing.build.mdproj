<Project
   DefaultTargets="Build"
    ToolsVersion="4.0"
    xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Import
      Project="OpenPublishingBuild.props"
      Condition="'$(OpenPublishingBuildPropsImported)' == '' "/>

  <!-- Begin Processing targets -->
  <UsingTask TaskName="GetBuildFiles"             AssemblyFile="$(BuildTaskAssembly)" />
  <UsingTask TaskName="ParseRepoConfiguration"    AssemblyFile="$(BuildTaskAssembly)" />
  <UsingTask TaskName="ExpandScriptIncludes"      AssemblyFile="$(BuildTaskAssembly)" />
  <UsingTask TaskName="ExtractContentMetadata"    AssemblyFile="$(BuildTaskAssembly)" />
  <UsingTask TaskName="Transform"                 AssemblyFile="$(BuildTaskAssembly)" />
  <UsingTask TaskName="ExpandFileIncludes"        AssemblyFile="$(BuildTaskAssembly)" />
  <UsingTask TaskName="NormalizeReference"        AssemblyFile="$(BuildTaskAssembly)" />
  <UsingTask TaskName="CopyOutputFile"            AssemblyFile="$(BuildTaskAssembly)" />
  <UsingTask TaskName="CopyResourceFile"          AssemblyFile="$(BuildTaskAssembly)" />
  <UsingTask TaskName="ParseToc"                  AssemblyFile="$(BuildTaskAssembly)" />
  <UsingTask TaskName="GenerateManifest"          AssemblyFile="$(BuildTaskAssembly)" />

  <Target Name="PrepareFolder">
    <Message Text="Preparing folder: LogOutputFolder=$(LogOutputFolder);OutputFolder=$(OutputFolder)" />
    <Message Text="Temp folder full path: $(TempFolderFullPath)"/>
    <MakeDir Directories="$(LogOutputFolder)" Condition="!Exists($(LogOutputFolder))"/>
    <MakeDir Directories="$(OutputFolder)" Condition="!Exists($(OutputFolder))"/>
    <MakeDir Directories="$(TempFolderFullPath)" Condition="!Exists($(TempFolderFullPath))"/>
  </Target>

  <!-- ParseToc Target-->
  <Target
      Name="ParseToc">
    <PropertyGroup>
      <CurrentTask>ParseRepoConfiguration</CurrentTask>
    </PropertyGroup>

    <ParseRepoConfiguration
        RepositoryRoot="$(RepositoryRoot)"
        TempFolder="$(TempFolder)"
        LogOutputFolder="$(LogOutputFolder)"
        OutputFolder="$(OutputFolder)"
        FileAccessorType="$(FileAccessorType)"
        ContinueOnError="ErrorAndStop">

      <Output
        TaskParameter ="DocsetSettingsWithoutTocId"
        ItemName="DocsetSettingsWithoutTocId" />
    </ParseRepoConfiguration>

    <Copy SourceFiles="$(RepoConfigurationFile)" DestinationFolder="$(OutputFolder)" />

    <PropertyGroup>
      <CurrentTask>ParseToc</CurrentTask>
    </PropertyGroup>

    <ParseToc
        RepositoryRoot="$(RepositoryRoot)"
        TempFolder="$(TempFolder)"
        LogOutputFolder="$(LogOutputFolder)"
        FileAccessorType="$(FileAccessorType)"
        DocsetSettingsWithoutTocId="@(DocsetSettingsWithoutTocId)"
        OutputFolder="$(OutputFolder)"
        ContinueOnError="ErrorAndStop">

      <Output
        TaskParameter ="TocOutputItems"
        ItemName="TocOutputItems" />

      <Output
        TaskParameter ="DocsetSettings"
        ItemName="DocsetSettings" />
    </ParseToc>
  </Target>

  <!-- Transform Target-->
  <Target
      Name="Transform">

    <PropertyGroup>
      <CurrentTask>GetBuildFiles</CurrentTask>
    </PropertyGroup>

    <GetBuildFiles
        RepositoryRoot="$(RepositoryRoot)"
        TempFolder="$(TempFolder)"
        BuildSearchPatterns="$(BuildSearchPatterns)"
        LogOutputFolder="$(LogOutputFolder)"
        OutputFolder="$(OutputFolder)"
        FileAccessorType="$(FileAccessorType)"
        DocsetSettingsWithoutTocId="@(DocsetSettingsWithoutTocId)"
        ContinueOnError="ErrorAndStop">

      <Output
          TaskParameter="ContentItems"
          ItemName="ContentItems"/>

      <Output
          TaskParameter="ResourceItems"
          ItemName="ResourceItems"/>

      <Output
          TaskParameter="ExcludedContentItems"
          ItemName="ExcludedContentItems"/>

      <Output
          TaskParameter="ExcludedResourceItems"
          ItemName="ExcludedResourceItems"/>
    </GetBuildFiles>
    
    <PropertyGroup>
      <CurrentTask>ExpandScriptIncludes</CurrentTask>
    </PropertyGroup>

    <ExpandScriptIncludes
        RepositoryRoot="$(RepositoryRoot)"
        TempFolder="$(TempFolder)"
        LogOutputFolder="$(LogOutputFolder)"
        OutputFolder="$(OutputFolder)"
        ContentItems="@(ContentItems)"
        FileAccessorType="$(FileAccessorType)"
        ContinueOnError="ErrorAndStop">

      <Output
        TaskParameter="ExpandedScriptContentItems"
        ItemName="ExpandedScriptContentItems" />
    </ExpandScriptIncludes>
    
    <PropertyGroup>
      <CurrentTask>ExtractContentMetadata</CurrentTask>
    </PropertyGroup>

    <ExtractContentMetadata
        RepositoryRoot="$(RepositoryRoot)"
        TempFolder="$(TempFolder)"
        LogOutputFolder="$(LogOutputFolder)"
        OutputFolder="$(OutputFolder)"
        ContentItems="@(ExpandedScriptContentItems)"
        FileAccessorType="$(FileAccessorType)"
        DocsetSettings="@(DocsetSettings)"
        ContinueOnError="ErrorAndStop">

      <Output
        TaskParameter="MetadataStrippedContentItems"
        ItemName="MetadataStrippedContentItems" />

      <Output
        TaskParameter="BuildFilesMetadata"
        ItemName="BuildFilesMetadata" />
    </ExtractContentMetadata>

    <PropertyGroup>
      <CurrentTask>Transform</CurrentTask>
    </PropertyGroup>

    <Transform
        RepositoryRoot="$(RepositoryRoot)"
        TempFolder="$(TempFolder)"
        LogOutputFolder="$(LogOutputFolder)"
        OutputFolder="$(OutputFolder)"
        ContentItems="@(MetadataStrippedContentItems)"
        FileAccessorType="$(FileAccessorType)"
        ContinueOnError="ErrorAndStop">

      <Output
        TaskParameter ="TransformedContentItems"
        ItemName="TransformedContentItems" />
    </Transform>

    <PropertyGroup>
      <CurrentTask>ExpandFileIncludes</CurrentTask>
    </PropertyGroup>

    <ExpandFileIncludes
        RepositoryRoot="$(RepositoryRoot)"
        TempFolder="$(TempFolder)"
        LogOutputFolder="$(LogOutputFolder)"
        OutputFolder="$(OutputFolder)"
        ContentItems="@(TransformedContentItems)"
        ExcludedContentItems="@(ExcludedContentItems)"
        FileAccessorType="$(FileAccessorType)"
        ContinueOnError="ErrorAndStop">

      <Output
        TaskParameter="ExpandedContentItems"
        ItemName="ExpandedContentItems" />
    </ExpandFileIncludes>

    <PropertyGroup>
      <CurrentTask>NormalizeReference</CurrentTask>
    </PropertyGroup>

    <NormalizeReference
        RepositoryRoot="$(RepositoryRoot)"
        TempFolder="$(TempFolder)"
        LogOutputFolder="$(LogOutputFolder)"
        OutputFolder="$(OutputFolder)"
        ContentItems="@(ExpandedContentItems)"
        FileAccessorType="$(FileAccessorType)"
        ContinueOnError="ErrorAndStop">

      <Output
        TaskParameter="NormalizedContentItems"
        ItemName="NormalizedContentItems" />
    </NormalizeReference>

    <PropertyGroup>
      <CurrentTask>CopyOutputFile</CurrentTask>
    </PropertyGroup>

    <CopyOutputFile
        RepositoryRoot="$(RepositoryRoot)"
        TempFolder="$(TempFolder)"
        LogOutputFolder="$(LogOutputFolder)"
        OutputFolder="$(OutputFolder)"
        BuildItems="@(NormalizedContentItems)"
        BuildFilesMetadata="@(BuildFilesMetadata)"
        FileAccessorType="$(FileAccessorType)"
        ContinueOnError="ErrorAndStop">

      <Output
        TaskParameter ="OutputItems"
        ItemName="ContentOutputItems" />
    </CopyOutputFile>

    <PropertyGroup>
      <CurrentTask>CopyResourceFile</CurrentTask>
    </PropertyGroup>

    <CopyResourceFile
        RepositoryRoot="$(RepositoryRoot)"
        TempFolder="$(TempFolder)"
        LogOutputFolder="$(LogOutputFolder)"
        OutputFolder="$(OutputFolder)"
        ResourceItems="@(ResourceItems)"
        FileAccessorType="$(FileAccessorType)"
        ContinueOnError="ErrorAndStop">

      <Output
        TaskParameter ="ResourceOutputItems"
        ItemName="ResourceOutputItems" />
    </CopyResourceFile>

    <PropertyGroup>
      <CurrentTask>GenerateManifest</CurrentTask>
    </PropertyGroup>

    <GenerateManifest
        RepositoryRoot="$(RepositoryRoot)"
        TempFolder="$(TempFolder)"
        LogOutputFolder="$(LogOutputFolder)"
        FileAccessorType="$(FileAccessorType)"
        DocsetSettings="@(DocsetSettings)"
        OutputFolder="$(OutputFolder)"
        ContentBuildItems="@(ContentOutputItems)"
        ResourceBuildItems="@(ResourceOutputItems)"
        TocBuildItems="@(TocOutputItems)"
        ContinueOnError="ErrorAndStop">
    </GenerateManifest>
  </Target>

  <Target
      Name="RemoveFolder">
    <RemoveDir Directories="$(TempFolderFullPath)" />
  </Target>
  
  <!-- Clean Target-->
  <Target
      Name="Clean">

    <!-- Set rebuild property -->
    <CreateProperty Value="true">
      <Output
        TaskParameter ="Value"
        PropertyName="Rebuild" />
    </CreateProperty>

  </Target>

  <!-- Build Target-->
  <Target
      Name="Build">

    <CallTarget
        Targets="PrepareFolder;
                 ParseToc;
                 Transform;
                 RemoveFolder" />

    <OnError ExecuteTargets="RemoveFolder" />
  </Target>

  <!-- Rebuild Target-->
  <Target
      Name="Rebuild"
      DependsOnTargets="Clean; 
                        Build" />

  <!-- Generate Target-->
  <Target
      Name="Generate"
      DependsOnTargets="Build" >

    <Exec Command="$(LocalPreviewExe) -i $(OutputFolder) --only-generate -t $(LocalPreviewServeTemplate)" />
  </Target>

  <!-- Serve Target-->
  <Target
      Name="Serve"
      DependsOnTargets="Build" >

    <Exec Command="start cmd /c &quot;$(LocalPreviewExe) -i $(OutputFolder) -t $(LocalPreviewServeTemplate)&quot;" />
  </Target>

  <!-- End Publishing Targets -->
</Project>